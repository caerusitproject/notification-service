server:
  port: 8087
spring:
  application:
    name: notification-service
  datasource:
    url:  jdbc:postgresql://localhost:5432/notification_service
    username: postgres
    password:  Welcome@1234
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-service
      auto-offset-reset: earliest
      max-poll-records: 5
      fetch-min-size: 1
      fetch-max-wait: 500
      enable-auto-commit: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    topic:
      notification-events: notification-events
    properties:
      spring.json.trusted.packages: "*"

  mail:
    host: smtp.gmail.com
    port: 587
    username: kaushiknandy04@gmail.com
    password: mzsp bvkx lfxn bobg
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
        debug: true
        
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus

twilio:
  accountSid: AC71684e3e42c88c8efaefb5d5cfbe6ac9
  authToken: 887ca625851b8ed262b2a36b006d8021
  fromNumber: +1 681 254 5959
  whatsappFrom: +14155238886
#file-path-description

#resilience4j.ratelimiter:
#  instances:
#    emailLimiter:
#      limit-for-period: 10   # max 10 emails
#      limit-refresh-period: 1s
#      timeout-duration: 500ms
file:
  upload-dir: "src/main/resources/email-template/"
# spring.mail.* configure for production mail host
